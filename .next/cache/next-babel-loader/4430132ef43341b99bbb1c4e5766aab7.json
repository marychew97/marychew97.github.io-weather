{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\marychew97.github.io-weather\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport '../styles.sass';\nimport '../styles.scss';\nimport React from 'react';\nimport axios from 'axios';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: '',\n      country: '',\n      lat: null,\n      long: null,\n      date: '',\n      temp: 0,\n      weather: '',\n      image: null,\n      hourForecast: [],\n      weekForecast: []\n    };\n    this.getLocationWeather = this.getLocationWeather.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLocationWeather();\n  }\n\n  async getLocationWeather() {\n    await navigator.geolocation.getCurrentPosition(position => {\n      const lat = position.coords.latitude;\n      const long = position.coords.longitude;\n      this.setState({\n        lat: lat,\n        long: long\n      });\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=bb8842d60516f2656d00cdbc9f999293`).then(res => {\n        const result = res.data;\n        console.log(result); //in kelvin\n        // this.getTemp(result.main.temp)\n\n        this.setState({\n          location: result.name,\n          country: result.sys.country,\n          weather: result.weather[0].main\n        });\n      });\n      this.getWeekForecast(lat, long);\n      this.getHourForecast(lat, long);\n    });\n    console.log(this.state);\n  }\n\n  getWeekForecast(lat, long) {\n    axios.get(`http://api.worldweatheronline.com/premium/v1/weather.ashx?key=453ff5c4911348cd95e91044201102&q=${lat},${long}&format=json&num_of_days=8`).then(res => {\n      const result = res.data.data;\n      console.log(result);\n      this.setState({\n        temp: result.current_condition[0].temp_C,\n        image: result.current_condition[0].weatherIconUrl[0].value\n      });\n      result.weather.map(data => {\n        var day = new Date(data.date);\n        var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n        day = days[day.getDay()];\n        this.setState({\n          weekForecast: [...this.state.weekForecast, {\n            day: day,\n            date: data.date,\n            maxTemp: data.maxtempC,\n            hour: {\n              time: data.hourly\n            }\n          }]\n        });\n      });\n    });\n  }\n\n  getHourForecast(lat, long) {\n    axios.get(`http://api.worldweatheronline.com/premium/v1/weather.ashx?key=453ff5c4911348cd95e91044201102&q=${lat},${long}&format=json&num_of_days=7`).then(res => {\n      const result = res.data.data;\n      result.weather[0].hourly.map(data => {\n        this.setState({\n          hourForecast: [...this.state.hourForecast, {\n            time: data.time,\n            temp: data.tempC,\n            weather: data.weatherDesc[0].value,\n            image: data.weatherIconUrl[0].value\n          }]\n        });\n      });\n    });\n  } // getDate(){\n  //     let date = new Date();\n  //     console.log(date.getDate() + \"/\"+ parseInt(date.getMonth()+1) +\"/\"+ date.getFullYear());\n  // }\n\n\n  render() {\n    console.log(this.state);\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"columns is-mobile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"column is-three-fifths is-offset-one-fifth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Weather Forecast\"), __jsx(\"h1\", {\n      className: \"title is-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.location, \", \", this.state.country), __jsx(\"p\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"(\", this.state.lat, \", \", this.state.long, \")\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.temp, \"\\u2103\", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), this.state.weather, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), __jsx(\"img\", {\n      src: this.state.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"card-hour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Hourly Weather Forecast\"), __jsx(\"div\", {\n      className: \"table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, __jsx(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, __jsx(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.state.hourForecast.map(data => __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, data.time)))), __jsx(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.hourForecast.map(data => __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, data.weather))), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.hourForecast.map(data => __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: data.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })))), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.hourForecast.map(data => __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, data.temp, \"\\u2103\"))))))), __jsx(\"div\", {\n      className: \"card-week\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Weekly Weather Forecast\"), __jsx(\"div\", {\n      className: \"table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, __jsx(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, __jsx(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"0000\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"0300\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"0600\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"0900\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"1200\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"1500\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"1800\"), __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"2100\"))), __jsx(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.state.weekForecast.map(day => __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, day.maxTemp, \"\\u2103\")))))))))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/user/Downloads/marychew97.github.io-weather/pages/index.js"],"names":["React","axios","Index","Component","constructor","props","state","location","country","lat","long","date","temp","weather","image","hourForecast","weekForecast","getLocationWeather","bind","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setState","get","then","res","result","data","console","log","name","sys","main","getWeekForecast","getHourForecast","current_condition","temp_C","weatherIconUrl","value","map","day","Date","days","getDay","maxTemp","maxtempC","hour","time","hourly","tempC","weatherDesc","render"],"mappings":"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","sourcesContent":["import '../styles.sass';\r\nimport '../styles.scss';\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Index extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            location: '',\r\n            country: '',\r\n            lat: null,\r\n            long: null,\r\n            date: '',\r\n            temp: 0,\r\n            weather: '',\r\n            image: null,\r\n            hourForecast: [],\r\n            weekForecast: []\r\n        }\r\n\r\n        this.getLocationWeather = this.getLocationWeather.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getLocationWeather();\r\n    }\r\n\r\n    async getLocationWeather(){\r\n        await navigator.geolocation.getCurrentPosition(\r\n            position => {\r\n                const lat = position.coords.latitude;\r\n                const long = position.coords.longitude;\r\n                this.setState({\r\n                    lat: lat,\r\n                    long: long\r\n                })\r\n                axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=bb8842d60516f2656d00cdbc9f999293`)\r\n                    .then(res => {\r\n                        const result = res.data;\r\n                        console.log(result)\r\n\r\n                        //in kelvin\r\n                        // this.getTemp(result.main.temp)\r\n                        this.setState({\r\n                            location: result.name,\r\n                            country: result.sys.country,\r\n                            weather: result.weather[0].main\r\n                        })\r\n                    })\r\n\r\n                this.getWeekForecast(lat,long);\r\n                this.getHourForecast(lat,long)\r\n            }\r\n        )\r\n        console.log(this.state)\r\n    }\r\n\r\n    getWeekForecast(lat, long){\r\n        axios.get(`http://api.worldweatheronline.com/premium/v1/weather.ashx?key=453ff5c4911348cd95e91044201102&q=${lat},${long}&format=json&num_of_days=8`)\r\n            .then(res => {\r\n                const result = res.data.data\r\n                console.log(result)\r\n                this.setState({\r\n                    temp: result.current_condition[0].temp_C,\r\n                    image: result.current_condition[0].weatherIconUrl[0].value\r\n                })\r\n                result.weather.map(data => {\r\n                    var day = new Date(data.date);\r\n                    var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n                    day = days[day.getDay()];\r\n                    this.setState({\r\n                    weekForecast: [...this.state.weekForecast, {\r\n                        day: day,\r\n                        date: data.date,\r\n                        maxTemp:data.maxtempC,\r\n                        hour: {\r\n                            time: data.hourly\r\n                        }\r\n                    }]\r\n                })})\r\n            })\r\n    }\r\n\r\n    getHourForecast(lat, long){\r\n        axios.get(`http://api.worldweatheronline.com/premium/v1/weather.ashx?key=453ff5c4911348cd95e91044201102&q=${lat},${long}&format=json&num_of_days=7`)\r\n        .then(res => {\r\n            const result = res.data.data\r\n            result.weather[0].hourly.map(data => {\r\n                this.setState({\r\n                hourForecast: [...this.state.hourForecast, {\r\n                    time: data.time,\r\n                    temp:data.tempC,\r\n                    weather: data.weatherDesc[0].value,\r\n                    image: data.weatherIconUrl[0].value\r\n                }]\r\n            })})\r\n        })\r\n    }\r\n\r\n    // getDate(){\r\n    //     let date = new Date();\r\n    //     console.log(date.getDate() + \"/\"+ parseInt(date.getMonth()+1) +\"/\"+ date.getFullYear());\r\n    // }\r\n\r\n    render(){\r\n        console.log(this.state)\r\n        return(\r\n            <div>\r\n                <div className=\"columns is-mobile\">\r\n                    <div className=\"column is-three-fifths is-offset-one-fifth\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-content\">\r\n                            <p className=\"title\">\r\n                            Weather Forecast\r\n                            </p>\r\n                            <h1 className=\"title is-1\">\r\n                            {this.state.location}, {this.state.country}\r\n                            </h1>\r\n                            <p className=\"subtitle\">\r\n                            ({this.state.lat}, {this.state.long})\r\n                            </p>\r\n                            <br/>\r\n                            <p className=\"subtitle\">\r\n                                {this.state.temp}&#8451;\r\n                                <br/>\r\n                                {this.state.weather}\r\n                                <br/><br/>\r\n                                <img src={this.state.image} />\r\n                            </p>    \r\n                        </div>\r\n                        <div className=\"card-hour\">\r\n                            <p className=\"subtitle\">\r\n                            Hourly Weather Forecast\r\n                            </p>\r\n                            <div className=\"table-container\">\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            {this.state.hourForecast.map(data => \r\n                                                <th>{data.time}</th>\r\n                                            )}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            {this.state.hourForecast.map(data => \r\n                                                <td>{data.weather}</td>\r\n                                            )}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {this.state.hourForecast.map(data => \r\n                                                <td><img src={data.image}/></td>\r\n                                            )}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {this.state.hourForecast.map(data => \r\n                                                <td>{data.temp}&#8451;</td>\r\n                                            )}\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-week\">\r\n                            <p className=\"subtitle\">\r\n                                Weekly Weather Forecast\r\n                            </p>\r\n                            <div className=\"table-container\">\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>0000</th>\r\n                                            <th>0300</th>\r\n                                            <th>0600</th>\r\n                                            <th>0900</th>\r\n                                            <th>1200</th>\r\n                                            <th>1500</th>\r\n                                            <th>1800</th>\r\n                                            <th>2100</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                            {this.state.weekForecast.map(day => \r\n                                            <tr>\r\n                                                <td>{day.maxTemp}&#8451;</td>\r\n                                                </tr>\r\n                                            )}\r\n                                        \r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}