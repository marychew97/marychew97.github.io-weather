{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.091547a39d843eade262.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import '../styles.sass';\r\nimport '../styles.scss';\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Index extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            location: '',\r\n            country: '',\r\n            lat: null,\r\n            long: null,\r\n            date: '',\r\n            temp: 0,\r\n            weather: '',\r\n            image: null,\r\n            hourForecast: [],\r\n            weekForecast: []\r\n        }\r\n\r\n        this.getLocationWeather = this.getLocationWeather.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getLocationWeather();\r\n    }\r\n\r\n    async getLocationWeather(){\r\n        await navigator.geolocation.getCurrentPosition(\r\n            position => {\r\n                const lat = position.coords.latitude;\r\n                const long = position.coords.longitude;\r\n                this.setState({\r\n                    lat: lat,\r\n                    long: long\r\n                })\r\n                axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=bb8842d60516f2656d00cdbc9f999293`)\r\n                    .then(res => {\r\n                        const result = res.data;\r\n                        console.log(result)\r\n\r\n                        //in kelvin\r\n                        // this.getTemp(result.main.temp)\r\n                        this.setState({\r\n                            location: result.name,\r\n                            country: result.sys.country,\r\n                            weather: result.weather[0].main\r\n                        })\r\n                    })\r\n\r\n                this.getWeekForecast(lat,long);\r\n                this.getHourForecast(lat,long)\r\n            }\r\n        )\r\n        console.log(this.state)\r\n    }\r\n\r\n    getWeekForecast(lat, long){\r\n        axios.get(`http://api.worldweatheronline.com/premium/v1/weather.ashx?key=453ff5c4911348cd95e91044201102&q=${lat},${long}&format=json&num_of_days=8`)\r\n            .then(res => {\r\n                const result = res.data.data\r\n                console.log(result)\r\n                this.setState({\r\n                    temp: result.current_condition[0].temp_C,\r\n                    image: result.current_condition[0].weatherIconUrl[0].value\r\n                })\r\n                result.weather.map(data => {\r\n                    var day = new Date(data.date);\r\n                    var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n                    day = days[day.getDay()];\r\n                    this.setState({\r\n                    weekForecast: [...this.state.weekForecast, {\r\n                        day: day,\r\n                        date: data.date,\r\n                        maxTemp:data.maxtempC,\r\n                        hour: {\r\n                            time: data.hourly\r\n                        }\r\n                    }]\r\n                })})\r\n            })\r\n    }\r\n\r\n    getHourForecast(lat, long){\r\n        axios.get(`http://api.worldweatheronline.com/premium/v1/weather.ashx?key=453ff5c4911348cd95e91044201102&q=${lat},${long}&format=json&num_of_days=7`)\r\n        .then(res => {\r\n            const result = res.data.data\r\n            result.weather[0].hourly.map(data => {\r\n                this.setState({\r\n                hourForecast: [...this.state.hourForecast, {\r\n                    time: data.time,\r\n                    temp:data.tempC,\r\n                    weather: data.weatherDesc[0].value,\r\n                    image: data.weatherIconUrl[0].value\r\n                }]\r\n            })})\r\n        })\r\n    }\r\n\r\n    // getDate(){\r\n    //     let date = new Date();\r\n    //     console.log(date.getDate() + \"/\"+ parseInt(date.getMonth()+1) +\"/\"+ date.getFullYear());\r\n    // }\r\n\r\n    render(){\r\n        var hours = ['0000', '0300', '0600', '0900', '1200', '1500', '1800', '2100'];\r\n        return(\r\n            <div>\r\n                <div className=\"columns is-mobile\">\r\n                    <div className=\"column is-three-fifths is-offset-one-fifth\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-content\">\r\n                            <p className=\"title\">\r\n                            Weather Forecast\r\n                            </p>\r\n                            <h1 className=\"title is-1\">\r\n                            {this.state.location}, {this.state.country}\r\n                            </h1>\r\n                            <p className=\"subtitle\">\r\n                            ({this.state.lat}, {this.state.long})\r\n                            </p>\r\n                            <br/>\r\n                            <p className=\"subtitle\">\r\n                                {this.state.temp}&#8451;\r\n                                <br/>\r\n                                {this.state.weather}\r\n                                <br/><br/>\r\n                                <img src={this.state.image} />\r\n                            </p>    \r\n                        </div>\r\n                        <div className=\"card-hour\">\r\n                            <p className=\"subtitle\">\r\n                            Hourly Weather Forecast\r\n                            </p>\r\n                            <div className=\"table-container\">\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            {this.state.hours.map(hour => \r\n                                                <th>{hour.time}</th>\r\n                                            )}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            {this.state.hourForecast.map(data => \r\n                                                <td>{data.weather}</td>\r\n                                            )}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {this.state.hourForecast.map(data => \r\n                                                <td><img src={data.image}/></td>\r\n                                            )}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {this.state.hourForecast.map(data => \r\n                                                <td>{data.temp}&#8451;</td>\r\n                                            )}\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-week\">\r\n                            <p className=\"subtitle\">\r\n                                Weekly Weather Forecast\r\n                            </p>\r\n                            <div className=\"table-container\">\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th></th>\r\n                                            {this.state.hours.map(hour => \r\n                                                <th>{hour.time}</th>\r\n                                            )}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                            {this.state.weekForecast.map(day => \r\n                                            <tr>\r\n                                                <td><b>{day.day}</b>&nbsp;&nbsp;{day.date}</td>\r\n                                                {day.hour.time.map(data => \r\n                                                    <td>\r\n                                                        {data.tempC}&#8451;\r\n                                                        <img src={data.weatherIconUrl[0].value} alt=\"weather icon\"/>\r\n                                                        {data.weatherDesc[0].value}\r\n                                                    </td>\r\n                                                )}\r\n                                            </tr>\r\n                                            )}\r\n                                        \r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index;"],"mappings":"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","sourceRoot":""}